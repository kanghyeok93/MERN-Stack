{"version":3,"sources":["components/Nav/nav.js","components/Index/tableItem.js","components/Page/page.js","components/Index/index.js","components/Write/write.js","components/Show/show.js","components/Edit/edit.js","components/u_index/u_tableItem.js","components/u_index/u_index.js","components/Sign/signup.js","components/u_show/u_show.js","components/u_edit/u_edit.js","components/Login/login.js","App.js","client/Root.js","serviceWorker.js","index.js"],"names":["Navs","logout","e","preventDefault","axios","post","then","res","console","log","data","status","_this","props","updateUser","loggedIn","username","catch","err","_this$props","this","react_default","a","createElement","Container","style","boxShadow","background","Navbar","expand","variant","bg","Toggle","aria-controls","Collapse","id","react_router_dom","to","className","Nav","width","react","onClick","Component","TableItem","obj","length","_id","textDecoration","title","author","dist_default","format","createdAt","count","Page","num","Index","state","board","keyword","handlePage","number","get","setState","handleSearch","Object","defineProperty","target","name","value","ClickSearch","alert","_this2","_this$state","boardList","Index_tableItem","result","map","boardItem","index","key","PL","i","pageNum","push","Page_page","Table","responsive","tableLayout","InputGroup","margin","Prepend","Text","index_esm","fontSize","FormControl","placeholder","aria-label","aria-describedby","type","onChange","fontWeight","ButtonToolbar","Button","marginBottom","Write","body","errors","handleChange","onSubmit","_this$state2","history","Form","Group","controlId","Label","Control","message","as","rows","unhandled","Alert","Show","showItem","delete","match","params","_this3","userId","view","window","confirm","color","updatedAt","Edit","UTableItem","UIndex","users","userList","user","u_tableItem","Signup","email","password","passwordConfirmation","Row","column","sm","htmlFor","Col","UShow","marginLeft","disabled","defaultValue","UEdit","currentPassword","newPassword","Login","redirectTo","msg","error","response","login","location","href","marginTop","App","userObject","getUser","Nav_nav","react_router","exact","path","render","src_components_Index","component","Show_show","assign","User","u_show_u_show","Login_login","Sign","Root","src_App_0","Boolean","hostname","ReactDOM","client_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b4f6e6b.chunk.js","sourcesContent":["import React, {Component,Fragment} from 'react';\r\nimport { Container,Navbar,Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './nav.scss';\r\nimport axios from \"axios\";\r\n\r\nclass Navs extends Component {\r\n\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        axios.post('/logout').then(res => {\r\n            console.log(res.data);\r\n            if(res.status === 200){\r\n                this.props.updateUser({\r\n                    loggedIn : false,\r\n                    username : null\r\n                })\r\n            }\r\n        }).catch(err => console.log('Logout err'))\r\n    };\r\n    render() {\r\n        const { loggedIn,username } = this.props;\r\n        console.log('navbar render, props : ');\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <Container style={{boxShadow:\"0 1px 10px rgba(0,0,0,0.3)\",background:\"brown\"}}>\r\n                <Navbar expand=\"lg\" variant=\"light\" bg=\"white\" >\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <NavLink to={\"/\"} className=\"NavLink\">S K H</NavLink>\r\n                        <Nav className=\"mr-auto justify-content-end\" style={{ width: \"90%\" }}>\r\n                            {\r\n                                    (loggedIn)\r\n                                    ?\r\n                                    <Fragment>\r\n                                        <NavLink className=\"NavLink\" to={'/ushow/' + username}>My Account</NavLink>\r\n                                        <NavLink to={'#'} className=\"NavLink\" onClick={this.logout}>Logout</NavLink>\r\n                                    </Fragment>\r\n                                    :\r\n                                    <Fragment>\r\n                                        <NavLink to={\"/signup\"} className=\"NavLink\">Sign up</NavLink>\r\n                                        <NavLink to={\"/login\"} className=\"NavLink\">Login</NavLink>\r\n                                    </Fragment>\r\n\r\n                            }\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navs;\r\n","import React, {Component,Fragment} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\n\r\nimport './tableItem.scss';\r\n\r\nclass TableItem extends Component {\r\n    render() {\r\n        const { obj } = this.props;\r\n        return (\r\n            <Fragment>\r\n                {\r\n                (obj === null || obj.length === 0)\r\n                     ?\r\n                    <tr>\r\n                        <td>게시글이 없습니다.</td>\r\n                    </tr>\r\n                    :\r\n                        <tr>\r\n                            <td>\r\n                                <Link to={\"/show/\" + obj._id} style={{textDecoration:\"none\"}} className=\"ellipsis\">{obj.title}</Link>\r\n                            </td>\r\n                            <td className=\"td_center\">\r\n                                {\r\n                                    (obj.author) ?\r\n                                        <Fragment><span className=\"ellipsis\">{obj.author.username}</span></Fragment>\r\n                                        : \"\"\r\n                                }\r\n                            </td>\r\n                            <td className=\"td_center\">\r\n                                <Moment format=\"YYYY-MM-DD\">\r\n                                    {obj.createdAt}\r\n                                </Moment>\r\n                            </td>\r\n                            <td className=\"td_center\">\r\n                                {obj.count}\r\n                            </td>\r\n                        </tr>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableItem;","import React, {Component} from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport './page.scss';\r\n\r\nclass Page extends Component {\r\n    render() {\r\n        const { onClick,num } = this.props;\r\n        return (\r\n            <div className=\"Page\">\r\n                <NavLink to={\"#\"} onClick={() => onClick(num)} className=\"page_num\">{num}</NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;","import React, {Component} from 'react';\r\nimport {Table, ButtonToolbar, Button, Form, InputGroup, FormControl} from \"react-bootstrap\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdSearch } from \"react-icons/md\";\r\n\r\nimport TableItem from './tableItem';\r\nimport './index.scss'\r\n\r\nimport Page from '../Page/page';\r\n\r\nclass Index extends Component {\r\n\r\n    state = {\r\n        board : [],\r\n        keyword : '',\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('/board')\r\n            .then(res => this.setState({ board : res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handlePage = (number) => {\r\n        axios.get('/board?page=' + number)\r\n            .then(res => this.setState({ board : res.data }))\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    handleSearch = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    ClickSearch = () => {\r\n        const { keyword } = this.state;\r\n        if(keyword == null || keyword == ''){\r\n            return alert(\"검색어를 입력 해주세요 !\")\r\n        }\r\n        const obj = {\r\n            keyword : keyword\r\n        };\r\n        axios.post('/board/search',obj)\r\n            .then(res => this.setState({ board : res.data }))\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        const { board,keyword } = this.state;\r\n        const { loggedIn } = this.props;\r\n        const { handlePage,handleSearch } = this;\r\n\r\n        const boardList = ( board.length === 0 ) ? <TableItem obj={null} />\r\n            : board.result.map(\r\n                (boardItem,index) => (\r\n                    <TableItem\r\n                        obj={boardItem} key={index}\r\n                    />\r\n                )\r\n            );\r\n\r\n        const PL = [];\r\n\r\n            for(let i=1; i <= board.pageNum; i++){\r\n                PL.push(<Page key={i} num={i} onClick={handlePage}/>)\r\n            }\r\n\r\n        return (\r\n            <div className=\"Index\">\r\n                <Table responsive style={{tableLayout:\"fixed\"}}>\r\n                    <thead>\r\n                    <tr className=\"tr_center\">\r\n                        <th>Title</th>\r\n                        <th>Author</th>\r\n                        <th>Date</th>\r\n                        <th>View</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {boardList}\r\n                    </tbody>\r\n                </Table>\r\n                    <div className=\"pagination\">\r\n                        {PL}\r\n                    </div>\r\n                    <InputGroup className=\"mb-3\" style={{width:\"30%\",margin:\"0 0 0 auto\"}}>\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text id=\"basic-addon1\"><MdSearch style={{fontSize:\"1.5rem\"}}/></InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                            placeholder = \"제목 or 내용\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            type=\"text\" id=\"keyword\" name=\"keyword\" value={keyword} onChange={handleSearch}/>\r\n                        <button onClick={this.ClickSearch} style={{fontWeight:\"bold\"}}>검색</button>\r\n                    </InputGroup>\r\n                <ButtonToolbar>\r\n                    {\r\n                        (loggedIn) ?\r\n                        <Button variant=\"success\" style={{marginBottom:\"30px\"}}>\r\n                            <Link to={'/write'} className=\"write\">글쓰기</Link>\r\n                        </Button> : <div className=\"login-error\">로그인을 해야 글작성을 할 수 있습니다</div>\r\n                    }\r\n                </ButtonToolbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;","import React, {Component} from 'react';\r\nimport {Form, Button, Alert} from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nimport './write.scss'\r\n\r\nclass Write extends Component {\r\n\r\n    state ={\r\n        title : '',\r\n        body : '',\r\n        errors : '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('/board/write')\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        const{ title, body } = this.state;\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            title : title,\r\n            body : body\r\n        };\r\n\r\n        axios.post('/board/add',obj)\r\n            .then(res => this.setState({\r\n                errors : res.data,\r\n            }));\r\n    };\r\n\r\n    render() {\r\n        const { title,body,errors } = this.state;\r\n        const { onSubmit,handleChange } = this;\r\n\r\n        if(errors === 'Add complete'){\r\n            // setTimeout(()=> {\r\n                this.props.history.push('/');\r\n            // },1000);\r\n        }\r\n        return (\r\n            <div className=\"form\">\r\n                <h2 className=\"W_h2\">글 작성</h2>\r\n                <Button variant=\"danger\" style={{marginBottom:30}}>\r\n                    <NavLink to={'/'} className=\"W_NavLink\">Back</NavLink>\r\n                </Button>\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group controlId=\"title\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"title\" onChange={handleChange} value={title} />\r\n                        {\r\n                            (errors.title) ? <span className=\"write_error\">{errors.title.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"body\">\r\n                        <Form.Label>Content</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" name=\"body\" onChange={handleChange} value={body}/>\r\n                        {\r\n                            (errors.body) ? <span className=\"write_error\">{errors.body.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Button variant=\"success\" style={{margin:\"15px 0 50px 0\"}} type=\"submit\">Submit</Button>\r\n                    {\r\n                        (errors.unhandled) ? <Alert variant=\"danger\">{errors.unhandled}</Alert> : null\r\n                    }\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Write;","import React, {Component, Fragment} from 'react';\r\nimport { ButtonToolbar,Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\n\r\nimport './show.scss';\r\n\r\nclass Show extends Component {\r\n\r\n      state = {\r\n          showItem : {}\r\n      };\r\n\r\n    componentDidMount() {\r\n        axios.get('/board/show/' + this.props.match.params.id)\r\n            .then(res => this.setState({ showItem : res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    delete = () => {\r\n        axios.get('/board/delete/' + this.props.match.params.id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n        // setTimeout(()=> {\r\n            this.props.history.push('/');\r\n        // },1000);\r\n    };\r\n\r\n    render() {\r\n        const { match,loggedIn, userId} = this.props;\r\n        const { showItem } = this.state;\r\n        const view = (showItem.author) ? (loggedIn) && userId === showItem.author._id : \"\";\r\n        return (\r\n            <div className=\"Show\">\r\n                <ButtonToolbar>\r\n                    <Link to={'/'}><Button variant=\"danger\" style={{margin:\"0px 5px\"}}>Back</Button></Link>\r\n                    {\r\n                       (view) ?\r\n                    <Fragment>\r\n                        <Link to={'/edit/' + match.params.id}><Button variant=\"info\" style={{margin:\"0px 5px\"}}>Edit</Button></Link>\r\n                        <a onClick={() => window.confirm('게시글을 삭제하시겠습니까?') ? this.delete() : null}><Button variant=\"warning\" style={{margin:\"0px 5px\",color:\"white\"}}>Delete</Button></a>\r\n                    </Fragment>\r\n                            : null\r\n                    }\r\n                </ButtonToolbar>\r\n                <div className=\"Show_sub\">\r\n                    <h3><p>{showItem.title}</p></h3>\r\n                    <div><span>작성자</span> : {\r\n                        (showItem.author) ? <span className=\"author\">{showItem.author.username}</span> : \"\"\r\n                    }\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"Show_Date\">\r\n                            <span>Created</span> : <Moment format=\"YYYY-MM-DD HH:mm\">{showItem.createdAt}</Moment>\r\n                            {\r\n                                (showItem.updatedAt) ?\r\n                                    <div><span>Updated</span> : <Moment format=\"YYYY-MM-DD HH:mm\">{showItem.updatedAt}</Moment></div> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"Show_body\">\r\n                            <p>{showItem.body}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Show;\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Form, ButtonToolbar, Button, Alert} from \"react-bootstrap\";\r\n\r\nimport './edit.scss';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Edit extends Component {\r\n\r\n    state = {\r\n        title : '',\r\n        body : '',\r\n        errors : '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        axios.get('/board/edit/' + match.params.id )\r\n            .then(res => {\r\n                this.setState({\r\n                    title : res.data.post.title,\r\n                    body : res.data.post.body,\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        const { title, body } = this.state;\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            title : title,\r\n            body : body,\r\n        };\r\n\r\n        axios.post('/board/update/' + this.props.match.params.id, obj)\r\n            .then(res => this.setState({\r\n                errors : res.data,\r\n            }));\r\n    };\r\n\r\n    render() {\r\n        const { title, body,errors } = this.state;\r\n        const { onChange,onSubmit } = this;\r\n\r\n        if(errors === 'Update complete'){\r\n            // setTimeout(()=> {\r\n                this.props.history.push('/show/' + this.props.match.params.id);\r\n            // },1000);\r\n        }\r\n        return (\r\n            <div className=\"Edit\">\r\n                <ButtonToolbar>\r\n                    <Link to={'/show/' + this.props.match.params.id} style={{marginBottom:30}}><Button variant=\"danger\">Back</Button></Link>\r\n                </ButtonToolbar>\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"title\" onChange={onChange} value={title}/>\r\n                        {\r\n                            (errors.title) ? <span className=\"edit_error\">{errors.title.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupText\">\r\n                        <Form.Label>Content</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"3\" name=\"body\" onChange={onChange} value={body}/>\r\n                        {\r\n                            (errors.body) ? <span className=\"edit_error\">{errors.body.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <ButtonToolbar>\r\n                        <Button variant=\"success\" type=\"submit\">Update</Button>\r\n                    </ButtonToolbar>\r\n                    {\r\n                        (errors.unhandled) ? <Alert variant=\"danger\">{errors.unhandled}</Alert> : null\r\n                    }\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './u_index.scss'\r\n\r\nclass UTableItem extends Component {\r\n    render() {\r\n        const {obj} = this.props;\r\n        return (\r\n            <div>\r\n                <Link to={'/ushow/' + obj.username} className=\"u_table_item\">{obj.username}</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UTableItem;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport './u_index.scss';\r\nimport UtableItem from './u_tableItem';\r\n\r\nclass UIndex extends Component {\r\n\r\n    state = {\r\n        users : []\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('/user')\r\n            .then(res => this.setState({ users : res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.state;\r\n        const userList = users.map(\r\n                (user,index) => (\r\n                    <UtableItem\r\n                        obj={user} key={index}\r\n                    />\r\n                )\r\n            );\r\n        return (\r\n            <div className=\"U_index\">\r\n                <h3>Users</h3>\r\n                {\r\n                    (users === null || users.length ===0) ? <div>There is no user yet.</div>\r\n                        : userList\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UIndex;","import React, {Component} from 'react';\r\nimport {Form, Button, Row, Col, Alert} from 'react-bootstrap';\r\n\r\nimport './signup.scss'\r\nimport axios from \"axios\";\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        username : '',\r\n        name : '',\r\n        email : '',\r\n        password : '',\r\n        passwordConfirmation : '',\r\n        errors : '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('/user/sign')\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        const{ username, name, email, password, passwordConfirmation } = this.state;\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            username : username,\r\n            name : name,\r\n            email : email,\r\n            password : password,\r\n            passwordConfirmation : passwordConfirmation,\r\n        };\r\n\r\n        axios.post('/user/add',obj)\r\n            .then(res => this.setState({\r\n                errors : res.data,\r\n            }));\r\n    };\r\n\r\n    render() {\r\n        const {username, name, email, password, passwordConfirmation, errors} = this.state;\r\n        const { onSubmit,handleChange} = this;\r\n\r\n        if(errors === 'Add complete'){\r\n            // setTimeout(()=> {\r\n                this.props.history.push('/login');\r\n            // },1000);\r\n        }\r\n        return (\r\n            <div className=\"Sign\">\r\n               <Form onSubmit={onSubmit}>\r\n                   <h3>New User</h3>\r\n                   <Form.Group as={Row}>\r\n                       <Form.Label column sm={2} htmlFor=\"username\">\r\n                           ID*\r\n                       </Form.Label>\r\n                       <Col sm={10}>\r\n                           <Form.Control type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username}/>\r\n                       </Col>\r\n                       {\r\n                           (errors.username) ? <span className=\"sign_error\">{errors.username.message}</span> : null\r\n                       }\r\n                   </Form.Group>\r\n                   <Form.Group as={Row}>\r\n                       <Form.Label column sm={2} htmlFor=\"name\">\r\n                           Name*\r\n                       </Form.Label>\r\n                       <Col sm={10}>\r\n                           <Form.Control type=\"text\" id=\"name\" name=\"name\" onChange={handleChange} value={name}/>\r\n                       </Col>\r\n                       {\r\n                           (errors.name) ? <span className=\"sign_error\">{errors.name.message}</span> : null\r\n                       }\r\n                   </Form.Group>\r\n                   <Form.Group as={Row}>\r\n                       <Form.Label column sm={2} htmlFor=\"email\">\r\n                           Email\r\n                       </Form.Label>\r\n                       <Col sm={10}>\r\n                           <Form.Control type=\"text\" id=\"email\" name=\"email\" onChange={handleChange} value={email}/>\r\n                       </Col>\r\n                       {\r\n                           (errors.email) ? <span className=\"sign_error\">{errors.email.message}</span> : null\r\n                       }\r\n                   </Form.Group>\r\n                   <Form.Group as={Row}>\r\n                       <Form.Label column sm={2} htmlFor=\"password\">\r\n                           Password*\r\n                       </Form.Label>\r\n                       <Col sm={10}>\r\n                           <Form.Control type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password}/>\r\n                       </Col>\r\n                       {\r\n                           (errors.password) ? <span className=\"sign_error\">{errors.password.message}</span> : null\r\n                       }\r\n                   </Form.Group>\r\n                   <Form.Group as={Row}>\r\n                       <Form.Label column sm={2} htmlFor=\"passwordConfirmation\">\r\n                           Password Confirmation*\r\n                       </Form.Label>\r\n                       <Col sm={10}>\r\n                           <Form.Control type=\"password\" id=\"passwordConfirmation\" name=\"passwordConfirmation\" onChange={handleChange} value={passwordConfirmation}/>\r\n                       </Col>\r\n                       {\r\n                           (errors.passwordConfirmation) ? <span className=\"sign_error\">{errors.passwordConfirmation.message}</span> : null\r\n                       }\r\n                   </Form.Group>\r\n                   <Form.Text className=\"text-muted\">\r\n                       *Required\r\n                   </Form.Text>\r\n                   <div className=\"button\">\r\n                        <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                   </div>\r\n                   {\r\n                       (errors.unhandled) ? <Alert variant=\"danger\">{errors.unhandled}</Alert> : null\r\n                   }\r\n               </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, {Component} from 'react';\r\nimport {Button,ButtonToolbar ,Col, Form, Row} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './u_show.scss';\r\n\r\nclass UShow extends Component {\r\n\r\n    state = {\r\n        showItem : {\r\n            name : '',\r\n            email : '',\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('/user/show/' + this.props.match.params.username)\r\n            .then(res => this.setState({ showItem : res.data }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const { userId, loggedIn } = this.props;\r\n        const { username } = this.props.match.params;\r\n        const { showItem } = this.state;\r\n        return (\r\n            <div className=\"u_show\">\r\n                <Form>\r\n                    <ButtonToolbar>\r\n                        <Link to={'/users'} className=\"usb\"><Button variant=\"danger\">Back</Button></Link>\r\n                        {\r\n                            (loggedIn && userId === showItem._id) ?\r\n                                <Link to={'/uedit/' + username} style={{marginLeft:\"20px\"}}><Button variant=\"info\">Edit</Button></Link>\r\n                                : null\r\n                        }\r\n                    </ButtonToolbar>\r\n                    <h3 style={{margin:\"30px 0 30px 0\"}}>{username}</h3>\r\n                    <fieldset disabled>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"name\">\r\n                            Name\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" id=\"name\" name=\"name\" defaultValue={showItem.name} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2} htmlFor=\"email\">\r\n                                Email\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control type=\"text\" id=\"email\" name=\"email\" defaultValue={showItem.email} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </fieldset>\r\n                   </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UShow;","import React, {Component} from 'react';\r\nimport {Button, Col, Form, Row, Alert} from \"react-bootstrap\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './u_edit.scss'\r\nimport axios from \"axios\";\r\n\r\nclass UEdit extends Component {\r\n\r\n    state ={\r\n        currentPassword : '',\r\n        username : '',\r\n        name : '',\r\n        email : '',\r\n        newPassword : '',\r\n        passwordConfirmation : '',\r\n        errors : '',\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        const { match } = this.props;\r\n        axios.get('/user/edit/' + match.params.username )\r\n            .then(res => {\r\n                this.setState({\r\n                    username : res.data.username,\r\n                    name : res.data.user.name,\r\n                    email : res.data.user.email,\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        const { currentPassword,username,name,email,newPassword,passwordConfirmation } = this.state;\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            currentPassword : currentPassword,\r\n            username : username,\r\n            name : name,\r\n            email : email,\r\n            newPassword : newPassword,\r\n            passwordConfirmation : passwordConfirmation,\r\n        };\r\n\r\n        axios.post('/user/update/' + this.props.match.params.username, obj)\r\n            .then(res => this.setState({\r\n                errors : res.data,\r\n            }));\r\n    };\r\n\r\n\r\n    render() {\r\n        const { currentPassword,username,name,email,newPassword,passwordConfirmation,errors} = this.state;\r\n\r\n        if(errors === 'Update complete'){\r\n            // setTimeout(()=> {\r\n                this.props.history.push('/users');\r\n            // },1000);\r\n        }\r\n        const { onChange,onSubmit } = this;\r\n        return (\r\n            <div className=\"UEdit\">\r\n                <Link to={'/ushow/' + this.props.match.params.username} className=\"usb\">\r\n                        <Button variant=\"danger\">Back</Button>\r\n                </Link>\r\n                <h3 style={{margin:\"30px 0\"}}>Edit User</h3>\r\n                <Form onSubmit={onSubmit}>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"currentPassword\">\r\n                            Current Password*\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"password\" id=\"currentPassword\" name=\"currentPassword\"\r\n                                onChange={onChange} value={currentPassword}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            (errors.currentPassword) ? <span className=\"u_edit_error\">{errors.currentPassword.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <fieldset disabled>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"username\">\r\n                            ID*\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" id=\"username\" name=\"username\"\r\n                                  onChange={onChange} value={username}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            (errors.username) ? <span className=\"u_edit_error\">{errors.username.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    </fieldset>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"name\">\r\n                            Name*\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" id=\"name\" name=\"name\"\r\n                                      onChange={onChange} value={name}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            (errors.name) ? <span className=\"u_edit_error\">{errors.name.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"email\">\r\n                            Email\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" id=\"email\" name=\"email\"\r\n                                      onChange={onChange} value={email}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            (errors.email) ? <span className=\"u_edit_error\">{errors.email.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"newPassword\">\r\n                            New Password\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"password\" id=\"newPassword\" name=\"newPassword\"\r\n                                      onChange={onChange} value={newPassword}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            (errors.newPassword) ? <span className=\"u_edit_error\">{errors.newPassword.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"newPassword\">\r\n                            Password Confirmation\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"password\" id=\"passwordConfirmation\" name=\"passwordConfirmation\"\r\n                                      onChange={onChange} value={passwordConfirmation}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            (errors.passwordConfirmation) ? <span className=\"u_edit_error\">{errors.passwordConfirmation.message}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Text className=\"text-muted\">\r\n                        *Required\r\n                    </Form.Text>\r\n                    <div className=\"button\">\r\n                        <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                    </div>\r\n                    {\r\n                        (errors.unhandled) ? <Alert variant=\"danger\">{errors.unhandled}</Alert> : null\r\n                    }\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UEdit;","import React, {Component} from 'react';\r\n\r\nimport './login.scss'\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        username : '',\r\n        password : '',\r\n        errors : '',\r\n        redirectTo : null\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('/login')\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        const{ username, password } = this.state;\r\n        e.preventDefault();\r\n\r\n        const obj = {\r\n            username : username,\r\n            password : password,\r\n        };\r\n\r\n        axios.post('/login',obj)\r\n            .then(res => {\r\n                console.log('login response:');\r\n                console.log(res.data);\r\n                if(res.data.msg === \"login\"){\r\n                    this.props.updateUser({\r\n                        loggedIn : true,\r\n                        username : res.data.username\r\n                    });\r\n                    this.setState({\r\n                        redirectTo : '/',\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        errors : res.data,\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                if(error.response.status === 401){\r\n                    this.setState({\r\n                        errors : {login : \"아이디 또는 비밀번호가 맞지 않습니다 !\"}\r\n                    })\r\n                }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { username,password,errors,redirectTo }  = this.state;\r\n        const { onSubmit,handleChange } = this;\r\n\r\n        if(redirectTo){\r\n            return window.location.href='/';\r\n        }\r\n        return (\r\n            <div className=\"Login\">\r\n                <Form onSubmit={onSubmit}>\r\n                    <h3 style={{marginBottom:\"30px\"}}>Login</h3>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"username\">\r\n                            ID\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"text\" id=\"username\" name=\"username\" onChange={handleChange} value={username}/>\r\n                        </Col>\r\n                        {\r\n                            (errors.username) ? <span className=\"login_error\">{errors.username}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm={2} htmlFor=\"password\">\r\n                            Password\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Control type=\"password\" id=\"password\" name=\"password\" onChange={handleChange} value={password}/>\r\n                        </Col>\r\n                        {\r\n                            (errors.password) ? <span className=\"login_error\">{errors.password}</span> : null\r\n                        }\r\n                    </Form.Group>\r\n                    {\r\n                        (errors.login) ? <span className=\"login_error_sub\">{errors.login}</span> : null\r\n                    }\r\n                    <div style={{marginTop:\"30px\"}}>\r\n                        <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import './App.scss'\n\nimport React, {Component} from 'react';\nimport { Nav,Index,Write,Show,Edit,User,Sign,UShow,UEdit,Login } from 'components';\nimport { Route,Switch } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n\n    state = {\n        loggedIn : false,\n        username : null,\n        userId : null,\n    };\n\n    componentDidMount() {\n        this.getUser()\n    }\n\n    updateUser = (userObject) => {\n        this.setState(userObject)\n    };\n\n    getUser(){\n        axios.get('/home')\n            .then(res => {\n                console.log('Get user response: ');\n                console.log(res.data);\n                if(res.data.user){\n                    console.log('Get user : There is a user saved in the server session: ');;\n                    this.setState({\n                        loggedIn :true,\n                        username :res.data.user.username,\n                        userId : res.data.user._id\n                    })\n                }else{\n                    console.log('Get user : no user');\n                    this.setState({\n                        loggedIn : false,\n                        username : null,\n                        userId : null,\n                    })\n                }\n            });\n    }\n\n\n    render() {\n        const { loggedIn, username, userId} = this.state;\n        return (\n            <div>\n                <Nav updateUser={this.updateUser} loggedIn={loggedIn} username={username}/>\n                <h2>MERN-Board</h2>\n                <Switch>\n                    <Route exact path={'/'} render={() => <Index loggedIn={loggedIn}/>}/>\n                    <Route path={'/write'} component={Write} />\n                    <Route path={'/show/:id'} render={ props => <Show {...props} userId={userId} loggedIn={loggedIn}/>}/>\n                    <Route path={'/edit/:id'} component={Edit}/>\n                    <Route path={'/users'} component={User}/>\n                    <Route path={'/ushow/:username'} render={props => <UShow {...props} userId={userId} loggedIn={loggedIn}/>}/>\n                    <Route path={'/uedit/:username'} component={UEdit}/>\n                    <Route path={'/login'} render={() => <Login updateUser={this.updateUser}/>}/>\n                    <Route path={'/signup'} component={Sign}/>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from 'App';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from 'client/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}